<?php

if (php_sapi_name() !== "cli") {
    message('ERROR: This script can only be run from the CLI.', 'e');
    exit();
}

if (posix_getuid() !== 0) {
    message('ERROR: This script can only be run as ROOT or with sudo, if your user is a Sudoer.', 'e');
    exit();
}

define('APACHE_SITES_AVAILABLE_DIR', '/etc/apache2/sites-available/');
define('APACHE_SITES_ENABLED_DIR', '/etc/apache2/sites-enabled/');
define('APACHE_CERTS_DIR', '/etc/apache2/certs-selfsigned/');
define('PHP_CONFIG_DIR', '/etc/php/');

message('### TEST ENVIRONMENTS LISTER ###');

// 1. list all the available test environments
$virtualHosts = listAppliableApacheVhosts();

// 2. pretty print the list
if(count($virtualHosts) === 0) {
    message('No test environments found.');
} else {
    message('Found ' . count($virtualHosts) . ' test environment(s):');

    // sort the list by enabled flag, then by domain name
    usort($virtualHosts, function ($a, $b) {
        if($a['enabled'] === $b['enabled']) {
            return strcmp($a['domain'], $b['domain']);
        }
        return $a['enabled'] ? -1 : 1;
    });

    foreach ($virtualHosts as $virtualHost) {
        $messageType = 's';
        if (!$virtualHost['enabled']) {
            $messageType = 'w';
        }

        message(" - {$virtualHost['domain']} -- PHP v{$virtualHost['phpver']} " . ($virtualHost['enabled'] ? '' : ' (disabled)') . " -- VHost Conf: {$virtualHost['conf']}", $messageType);
    }
}

function message(string $string, string $type = 'i')
{
    switch ($type) {
        case 'e': //error
            echo "\033[31m$string \033[0m\n";
            break;
        case 's': //success
            echo "\033[32m$string \033[0m\n";
            break;
        case 'w': //warning
            echo "\033[33m$string \033[0m\n";
            break;
        case 'i': //info
            echo "\033[36m$string \033[0m\n";
            break;
        default:
            echo "$string\n";
            break;
    }
}

function listAppliableApacheVhosts() : array
{
    $virtualHosts = [];
    $files = scandir(APACHE_SITES_AVAILABLE_DIR);
    foreach ($files as $file) {
        if ($file === '.' || $file === '..' || !is_file(APACHE_SITES_AVAILABLE_DIR . $file)) {
            continue;
        }

        // read the file, and, if it contains the literal string "# Auto-generated by the test environment creator", then it's a test environment
        $contents = file_get_contents(APACHE_SITES_AVAILABLE_DIR . $file);
        if (strpos($contents, '# Auto-generated by the test environment creator') !== false) {
            // check the PHP-FPM version used, by matching the string "SetHandler "proxy:unix:/var/run/php/php$phpver-fpm-$domain.sock|" in the file
            $phpver = $domain = null;
            if (preg_match('/SetHandler "proxy:unix:\/var\/run\/php\/php([0-9\.]+)-fpm-([^"\|]+)/', $contents, $matches)) {
                $phpver = $matches[1];
                $domain = str_replace('.sock', '', $matches[2]);
            }

            // see if this VirtualHost is enabled by checking if it's symlinked in the sites-enabled directory
            $enabled = false;
            if (is_file(APACHE_SITES_ENABLED_DIR . $file)) {
                $enabled = true;
            }

            $virtualHosts[] = [
                'conf' => $file,
                'phpver' => $phpver,
                'domain' => $domain,
                'enabled' => $enabled,
            ];
        }
    }

    return $virtualHosts;
}
